#include <stdio.h>
#include <math.h>

// Defina a função da equação (c)
double f(double x) {
    return 1 + 5 * x - 6 * pow(x, 3) - exp(2 * x);
}

// Defina a derivada da função (c)
double df(double x) {
    return 5 - 18 * pow(x, 2) - 2 * exp(2 * x);
}

// Método de Newton
double newton(double x0, double epsilon, int max_iter) {
    double x = x0;
    int iter;
    for (iter = 1; iter <= max_iter; iter++) {
        double x_anterior = x;
        x = x - f(x_anterior) / df(x_anterior);
        if (fabs(f(x)) < epsilon) {
            printf("Resultado da última iteração do Método de Newton:\n");
            printf("Iteração %d: Raiz = %.14lf\n", iter, x);
            return x;
        }
    }
    printf("O método de Newton não convergiu para uma raiz com a precisão desejada.\n");
    return NAN;
}

int main() {
    // Parâmetros
    double x0 = 1.0;        // Valor inicial
    double epsilon = 1e-7;  // Precisão desejada
    int max_iter = 100;     // Número máximo de iterações

    // Resolvendo a equação (c) com o Método de Newton
    double raiz = newton(x0, epsilon, max_iter);

    return 0;
}
