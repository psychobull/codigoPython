import math

# Defina a função da equação
def f(x):
    return math.exp(x - 2) + x**3 - x

# Defina a derivada da função
def df(x):
    return math.exp(x - 2) + 3 * x**2 - 1

# Método de Newton
def newton(f, df, x0, epsilon, max_iter):
    x = x0
    for i in range(max_iter):
        x_anterior = x
        x = x - f(x_anterior) / df(x_anterior)
        erro = abs(x - x_anterior)
        if erro < epsilon:
            return x, i
    return None, max_iter

# Parâmetros
x0 = 2.0  # Valor inicial
epsilon = 1e-7  # Precisão desejada
max_iter = 100  # Número máximo de iterações

# Resolvendo a equação com o Método de Newton
raiz_newton, iteracoes_newton = newton(f, df, x0, epsilon, max_iter)

# Exibindo resultado
print("Método de Newton:")
print(f"Raiz (Newton): {raiz_newton}, Iterações: {iteracoes_newton}")
