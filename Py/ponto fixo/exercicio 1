import math

# Defina a função da equação (a)
def f(x):
    return 2 * x**3 - 6 * x - 1

# Defina a derivada da função (a)
def df(x):
    return 6 * x**2 - 6

# Método do Ponto Fixo
def ponto_fixo(g, x0, epsilon, max_iter):
    x = x0
    for i in range(max_iter):
        x_anterior = x
        x = g(x_anterior)
        erro = abs(x - x_anterior)
        if erro < epsilon:
            return x, i
    return None, max_iter

# Funções de iteração para a equação (a)
def g(x):
    return x - (2 * x**3 - 6 * x - 1) / (6 * x**2 - 6 + 1e-10)  # Adicionando uma pequena constante para evitar divisão por zero

# Parâmetros
x0 = 1.0  # Valor inicial
epsilon = 1e-7  # Precisão desejada
max_iter = 100  # Número máximo de iterações

# Resolvendo a equação (a) com Ponto Fixo
raiz, iteracoes = ponto_fixo(g, x0, epsilon, max_iter)

# Exibindo resultados
print("Método do Ponto Fixo:")
print(f"Raiz: {raiz}, Iterações: {iteracoes}")
