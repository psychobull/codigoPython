// ESSE MÉTODO NÃO É CAPAZ DE ENCONTRAR A RAÍZ DESEJADA, EXPLICAÇÃO NO FINAL DO CÓDIGO



#include <stdio.h>
#include <math.h>

// Função de iteração para o Método do Ponto Fixo
double phi(double x) {
    return (1 + 5 * x - 6 * pow(x, 3) - exp(2 * x)) / 5;
}

// Método do Ponto Fixo
double ponto_fixo(double x0, double epsilon, int max_iter) {
    double x = x0;
    int iter;
    for (iter = 1; iter <= max_iter; iter++) {
        double x_anterior = x;
        x = phi(x_anterior);
        if (fabs(x - x_anterior) < epsilon) {
            printf("Resultado do Método do Ponto Fixo:\n");
            printf("Iteração %d: Raiz = %.14lf\n", iter, x);
            return x;
        }
    }
    printf("O Método do Ponto Fixo não convergiu para uma raiz com a precisão desejada.\n");
    return NAN;
}

int main() {
    // Parâmetros
    double x0 = 1.0;       // Valor inicial
    double epsilon = 1e-14; // Precisão desejada
    int max_iter = 1000;    // Número máximo de iterações

    // Resolvendo a equação com o Método do Ponto Fixo
    double raiz = ponto_fixo(x0, epsilon, max_iter);

    return 0;
}



/*
A equação que você apresentou é mais adequada para o método de Newton, e não para o método do ponto fixo. 
Para o método do ponto fixo, precisamos reescrever a equação de forma que seja da forma x = Φ(x), 
o que não é facilmente alcançado com a equação dada.

O método do ponto fixo é mais apropriado quando você tem uma função Φ(x) claramente definida em termos de (x), 
e não funciona bem com funções que contenham a variável (x) em termos complexos.
*/
